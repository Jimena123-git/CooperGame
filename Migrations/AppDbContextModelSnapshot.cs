// <auto-generated />
using System;
using CooperGame.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CooperGame.Migrations.AppDb
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CooperGame.Models.Jugador", b =>
                {
                    b.Property<int>("IdJugador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdJugador"));

                    b.Property<DateOnly>("FechaRegistro")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdJugador");

                    b.ToTable("Jugadores");
                });

            modelBuilder.Entity("CooperGame.Models.Partida", b =>
                {
                    b.Property<int>("IdPartida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPartida"));

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<int>("IdJugador")
                        .HasColumnType("int");

                    b.Property<DateTime>("TiempoTotal")
                        .HasColumnType("datetime2");

                    b.HasKey("IdPartida");

                    b.HasIndex("IdJugador");

                    b.ToTable("Partidas");
                });

            modelBuilder.Entity("CooperGame.Models.Recurso", b =>
                {
                    b.Property<int>("IdRecurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRecurso"));

                    b.Property<int>("CantidadRecolectada")
                        .HasColumnType("int");

                    b.Property<int>("IdPartida")
                        .HasColumnType("int");

                    b.Property<string>("Objetivo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRecurso");

                    b.HasIndex("IdPartida");

                    b.ToTable("Recursos");
                });

            modelBuilder.Entity("CooperGame.Models.Resultado", b =>
                {
                    b.Property<int>("IdResultado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdResultado"));

                    b.Property<int>("CantidadResultadoPorJugador")
                        .HasColumnType("int");

                    b.Property<int>("IdJugador")
                        .HasColumnType("int");

                    b.Property<int>("IdPartida")
                        .HasColumnType("int");

                    b.HasKey("IdResultado");

                    b.HasIndex("IdJugador");

                    b.HasIndex("IdPartida");

                    b.ToTable("Resultados");
                });

            modelBuilder.Entity("CooperGame.Models.Partida", b =>
                {
                    b.HasOne("CooperGame.Models.Jugador", "JugadorPartida")
                        .WithMany("Partidas")
                        .HasForeignKey("IdJugador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("JugadorPartida");
                });

            modelBuilder.Entity("CooperGame.Models.Recurso", b =>
                {
                    b.HasOne("CooperGame.Models.Partida", "Partida")
                        .WithMany("Recursos")
                        .HasForeignKey("IdPartida")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Partida");
                });

            modelBuilder.Entity("CooperGame.Models.Resultado", b =>
                {
                    b.HasOne("CooperGame.Models.Jugador", "JugadorResultado")
                        .WithMany("Resultados")
                        .HasForeignKey("IdJugador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CooperGame.Models.Partida", "Partida")
                        .WithMany("Resultados")
                        .HasForeignKey("IdPartida")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("JugadorResultado");

                    b.Navigation("Partida");
                });

            modelBuilder.Entity("CooperGame.Models.Jugador", b =>
                {
                    b.Navigation("Partidas");

                    b.Navigation("Resultados");
                });

            modelBuilder.Entity("CooperGame.Models.Partida", b =>
                {
                    b.Navigation("Recursos");

                    b.Navigation("Resultados");
                });
#pragma warning restore 612, 618
        }
    }
}
